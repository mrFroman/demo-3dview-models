{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BottomTabView = BottomTabView;\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _TransitionPresets = require(\"../TransitionConfigs/TransitionPresets.js\");\nvar _BottomTabBarHeightCallbackContext = require(\"../utils/BottomTabBarHeightCallbackContext.js\");\nvar _BottomTabBarHeightContext = require(\"../utils/BottomTabBarHeightContext.js\");\nvar _useAnimatedHashMap = require(\"../utils/useAnimatedHashMap.js\");\nvar _BottomTabBar = require(\"./BottomTabBar.js\");\nvar _ScreenFallback = require(\"./ScreenFallback.js\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nconst EPSILON = 1e-5;\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\nconst NAMED_TRANSITIONS_PRESETS = {\n  fade: _TransitionPresets.FadeTransition,\n  shift: _TransitionPresets.ShiftTransition,\n  none: {\n    sceneStyleInterpolator: undefined,\n    transitionSpec: {\n      animation: 'timing',\n      config: {\n        duration: 0\n      }\n    }\n  }\n};\nconst useNativeDriver = _reactNative.Platform.OS !== 'web';\nconst hasAnimation = options => {\n  const {\n    animation,\n    transitionSpec\n  } = options;\n  if (animation) {\n    return animation !== 'none';\n  }\n  return Boolean(transitionSpec);\n};\nconst renderTabBarDefault = props => (0, _jsxRuntime.jsx)(_BottomTabBar.BottomTabBar, Object.assign({}, props));\nfunction BottomTabView(props) {\n  const {\n    tabBar = renderTabBarDefault,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios'\n  } = props;\n  const focusedRouteKey = state.routes[state.index].key;\n  const {\n    direction\n  } = (0, _native.useLocale)();\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n  const previousRouteKeyRef = React.useRef(focusedRouteKey);\n  const tabAnims = (0, _useAnimatedHashMap.useAnimatedHashMap)(state);\n  React.useEffect(() => {\n    const previousRouteKey = previousRouteKeyRef.current;\n    let popToTopAction;\n    if (previousRouteKey !== focusedRouteKey && descriptors[previousRouteKey]?.options.popToTopOnBlur) {\n      const prevRoute = state.routes.find(route => route.key === previousRouteKey);\n      if (prevRoute?.state?.type === 'stack' && prevRoute.state.key) {\n        popToTopAction = Object.assign({}, _native.StackActions.popToTop(), {\n          target: prevRoute.state.key\n        });\n      }\n    }\n    const animateToIndex = () => {\n      if (previousRouteKey !== focusedRouteKey) {\n        navigation.emit({\n          type: 'transitionStart',\n          target: focusedRouteKey\n        });\n      }\n      _reactNative.Animated.parallel(state.routes.map((route, index) => {\n        const {\n          options\n        } = descriptors[route.key];\n        const {\n          animation = 'none',\n          transitionSpec = NAMED_TRANSITIONS_PRESETS[animation].transitionSpec\n        } = options;\n        let spec = transitionSpec;\n        if (route.key !== previousRouteKey && route.key !== focusedRouteKey) {\n          spec = NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n        }\n        spec = spec ?? NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n        const toValue = index === state.index ? 0 : index >= state.index ? 1 : -1;\n        return _reactNative.Animated[spec.animation](tabAnims[route.key], Object.assign({}, spec.config, {\n          toValue,\n          useNativeDriver\n        }));\n      }).filter(Boolean)).start(({\n        finished\n      }) => {\n        if (finished && popToTopAction) {\n          navigation.dispatch(popToTopAction);\n        }\n        if (previousRouteKey !== focusedRouteKey) {\n          navigation.emit({\n            type: 'transitionEnd',\n            target: focusedRouteKey\n          });\n        }\n      });\n    };\n    animateToIndex();\n    previousRouteKeyRef.current = focusedRouteKey;\n  }, [descriptors, focusedRouteKey, navigation, state.index, state.routes, tabAnims]);\n  const dimensions = _elements.SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() => (0, _BottomTabBar.getTabBarHeight)({\n    state,\n    descriptors,\n    dimensions,\n    insets: Object.assign({}, _elements.SafeAreaProviderCompat.initialMetrics.insets, props.safeAreaInsets),\n    style: descriptors[state.routes[state.index].key].options.tabBarStyle\n  }));\n  const renderTabBar = () => {\n    return (0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, {\n      children: insets => tabBar({\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation,\n        insets: {\n          top: safeAreaInsets?.top ?? insets?.top ?? 0,\n          right: safeAreaInsets?.right ?? insets?.right ?? 0,\n          bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n          left: safeAreaInsets?.left ?? insets?.left ?? 0\n        }\n      })\n    });\n  };\n  const {\n    routes\n  } = state;\n  const hasTwoStates = !routes.some(route => hasAnimation(descriptors[route.key].options));\n  const {\n    tabBarPosition = 'bottom'\n  } = descriptors[focusedRouteKey].options;\n  return (0, _jsxRuntime.jsxs)(_elements.SafeAreaProviderCompat, {\n    style: {\n      flexDirection: tabBarPosition === 'left' || tabBarPosition === 'right' ? tabBarPosition === 'left' && direction === 'ltr' || tabBarPosition === 'right' && direction === 'rtl' ? 'row-reverse' : 'row' : 'column'\n    },\n    children: [tabBarPosition === 'top' ? (0, _jsxRuntime.jsx)(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext.Provider, {\n      value: setTabBarHeight,\n      children: renderTabBar()\n    }) : null, (0, _jsxRuntime.jsx)(_ScreenFallback.MaybeScreenContainer, {\n      enabled: detachInactiveScreens,\n      hasTwoStates: hasTwoStates,\n      style: styles.screens,\n      children: routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const {\n          lazy = true,\n          animation = 'none',\n          sceneStyleInterpolator = NAMED_TRANSITIONS_PRESETS[animation].sceneStyleInterpolator\n        } = descriptor.options;\n        const isFocused = state.index === index;\n        const isPreloaded = state.preloadedRouteKeys.includes(route.key);\n        if (lazy && !loaded.includes(route.key) && !isFocused && !isPreloaded) {\n          return null;\n        }\n        const {\n          freezeOnBlur,\n          header = ({\n            layout,\n            options\n          }) => (0, _jsxRuntime.jsx)(_elements.Header, Object.assign({}, options, {\n            layout: layout,\n            title: (0, _elements.getHeaderTitle)(options, route.name)\n          })),\n          headerShown,\n          headerStatusBarHeight,\n          headerTransparent,\n          sceneStyle: customSceneStyle\n        } = descriptor.options;\n        const {\n          sceneStyle\n        } = sceneStyleInterpolator?.({\n          current: {\n            progress: tabAnims[route.key]\n          }\n        }) ?? {};\n        const animationEnabled = hasAnimation(descriptor.options);\n        const activityState = isFocused ? STATE_ON_TOP : animationEnabled ? tabAnims[route.key].interpolate({\n          inputRange: [0, 1 - EPSILON, 1],\n          outputRange: [STATE_TRANSITIONING_OR_BELOW_TOP, STATE_TRANSITIONING_OR_BELOW_TOP, STATE_INACTIVE],\n          extrapolate: 'extend'\n        }) : STATE_INACTIVE;\n        return (0, _jsxRuntime.jsx)(_ScreenFallback.MaybeScreen, {\n          style: [_reactNative.StyleSheet.absoluteFill, {\n            zIndex: isFocused ? 0 : -1\n          }],\n          active: activityState,\n          enabled: detachInactiveScreens,\n          freezeOnBlur: freezeOnBlur,\n          shouldFreeze: activityState === STATE_INACTIVE && !isPreloaded,\n          children: (0, _jsxRuntime.jsx)(_BottomTabBarHeightContext.BottomTabBarHeightContext.Provider, {\n            value: tabBarPosition === 'bottom' ? tabBarHeight : 0,\n            children: (0, _jsxRuntime.jsx)(_elements.Screen, {\n              focused: isFocused,\n              route: descriptor.route,\n              navigation: descriptor.navigation,\n              headerShown: headerShown,\n              headerStatusBarHeight: headerStatusBarHeight,\n              headerTransparent: headerTransparent,\n              header: header({\n                layout: dimensions,\n                route: descriptor.route,\n                navigation: descriptor.navigation,\n                options: descriptor.options\n              }),\n              style: [customSceneStyle, animationEnabled && sceneStyle],\n              children: descriptor.render()\n            })\n          })\n        }, route.key);\n      })\n    }), tabBarPosition !== 'top' ? (0, _jsxRuntime.jsx)(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext.Provider, {\n      value: setTabBarHeight,\n      children: renderTabBar()\n    }) : null]\n  });\n}\nconst styles = _reactNative.StyleSheet.create({\n  screens: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["_elements","require","_native","React","_interopRequireWildcard","_reactNative","_reactNativeSafeAreaContext","_TransitionPresets","_BottomTabBarHeightCallbackContext","_BottomTabBarHeightContext","_useAnimatedHashMap","_BottomTabBar","_ScreenFallback","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","NAMED_TRANSITIONS_PRESETS","fade","FadeTransition","shift","ShiftTransition","none","sceneStyleInterpolator","undefined","transitionSpec","animation","config","duration","useNativeDriver","Platform","OS","hasAnimation","options","Boolean","renderTabBarDefault","props","jsx","BottomTabBar","assign","BottomTabView","tabBar","state","navigation","descriptors","safeAreaInsets","detachInactiveScreens","focusedRouteKey","routes","index","key","direction","useLocale","loaded","setLoaded","useState","includes","previousRouteKeyRef","useRef","tabAnims","useAnimatedHashMap","useEffect","previousRouteKey","current","popToTopAction","popToTopOnBlur","prevRoute","find","route","type","StackActions","popToTop","target","animateToIndex","emit","Animated","parallel","map","spec","toValue","filter","start","finished","dispatch","dimensions","SafeAreaProviderCompat","initialMetrics","frame","tabBarHeight","setTabBarHeight","getTabBarHeight","insets","style","tabBarStyle","renderTabBar","SafeAreaInsetsContext","Consumer","children","top","right","bottom","left","hasTwoStates","some","tabBarPosition","jsxs","flexDirection","BottomTabBarHeightCallbackContext","Provider","value","MaybeScreenContainer","enabled","styles","screens","descriptor","lazy","isFocused","isPreloaded","preloadedRouteKeys","freezeOnBlur","header","layout","Header","title","getHeaderTitle","name","headerShown","headerStatusBarHeight","headerTransparent","sceneStyle","customSceneStyle","progress","animationEnabled","activityState","interpolate","inputRange","outputRange","extrapolate","MaybeScreen","StyleSheet","absoluteFill","zIndex","active","shouldFreeze","BottomTabBarHeightContext","Screen","focused","render","create","flex","overflow"],"sources":["/app/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport {\n  type NavigationAction,\n  type ParamListBase,\n  StackActions,\n  type TabNavigationState,\n  useLocale,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport {\n  FadeTransition,\n  ShiftTransition,\n} from '../TransitionConfigs/TransitionPresets';\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationOptions,\n  BottomTabNavigationProp,\n} from '../types';\nimport { BottomTabBarHeightCallbackContext } from '../utils/BottomTabBarHeightCallbackContext';\nimport { BottomTabBarHeightContext } from '../utils/BottomTabBarHeightContext';\nimport { useAnimatedHashMap } from '../utils/useAnimatedHashMap';\nimport { BottomTabBar, getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nconst EPSILON = 1e-5;\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\n\nconst NAMED_TRANSITIONS_PRESETS = {\n  fade: FadeTransition,\n  shift: ShiftTransition,\n  none: {\n    sceneStyleInterpolator: undefined,\n    transitionSpec: {\n      animation: 'timing',\n      config: { duration: 0 },\n    },\n  },\n} as const;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasAnimation = (options: BottomTabNavigationOptions) => {\n  const { animation, transitionSpec } = options;\n\n  if (animation) {\n    return animation !== 'none';\n  }\n\n  return Boolean(transitionSpec);\n};\n\nconst renderTabBarDefault = (props: BottomTabBarProps) => (\n  <BottomTabBar {...props} />\n);\n\nexport function BottomTabView(props: Props) {\n  const {\n    tabBar = renderTabBarDefault,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n  } = props;\n\n  const focusedRouteKey = state.routes[state.index].key;\n\n  const { direction } = useLocale();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const previousRouteKeyRef = React.useRef(focusedRouteKey);\n  const tabAnims = useAnimatedHashMap(state);\n\n  React.useEffect(() => {\n    const previousRouteKey = previousRouteKeyRef.current;\n\n    let popToTopAction: NavigationAction | undefined;\n\n    if (\n      previousRouteKey !== focusedRouteKey &&\n      descriptors[previousRouteKey]?.options.popToTopOnBlur\n    ) {\n      const prevRoute = state.routes.find(\n        (route) => route.key === previousRouteKey\n      );\n\n      if (prevRoute?.state?.type === 'stack' && prevRoute.state.key) {\n        popToTopAction = {\n          ...StackActions.popToTop(),\n          target: prevRoute.state.key,\n        };\n      }\n    }\n\n    const animateToIndex = () => {\n      if (previousRouteKey !== focusedRouteKey) {\n        navigation.emit({\n          type: 'transitionStart',\n          target: focusedRouteKey,\n        });\n      }\n\n      Animated.parallel(\n        state.routes\n          .map((route, index) => {\n            const { options } = descriptors[route.key];\n            const {\n              animation = 'none',\n              transitionSpec = NAMED_TRANSITIONS_PRESETS[animation]\n                .transitionSpec,\n            } = options;\n\n            let spec = transitionSpec;\n\n            if (\n              route.key !== previousRouteKey &&\n              route.key !== focusedRouteKey\n            ) {\n              // Don't animate if the screen is not previous one or new one\n              // This will avoid flicker for screens not involved in the transition\n              spec = NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n            }\n\n            spec = spec ?? NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n\n            const toValue =\n              index === state.index ? 0 : index >= state.index ? 1 : -1;\n\n            return Animated[spec.animation](tabAnims[route.key], {\n              ...spec.config,\n              toValue,\n              useNativeDriver,\n            });\n          })\n          .filter(Boolean) as Animated.CompositeAnimation[]\n      ).start(({ finished }) => {\n        if (finished && popToTopAction) {\n          navigation.dispatch(popToTopAction);\n        }\n\n        if (previousRouteKey !== focusedRouteKey) {\n          navigation.emit({\n            type: 'transitionEnd',\n            target: focusedRouteKey,\n          });\n        }\n      });\n    };\n\n    animateToIndex();\n\n    previousRouteKeyRef.current = focusedRouteKey;\n  }, [\n    descriptors,\n    focusedRouteKey,\n    navigation,\n    state.index,\n    state.routes,\n    tabAnims,\n  ]);\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  // If there is no animation, we only have 2 states: visible and invisible\n  const hasTwoStates = !routes.some((route) =>\n    hasAnimation(descriptors[route.key].options)\n  );\n\n  const { tabBarPosition = 'bottom' } = descriptors[focusedRouteKey].options;\n\n  return (\n    <SafeAreaProviderCompat\n      style={{\n        flexDirection:\n          tabBarPosition === 'left' || tabBarPosition === 'right'\n            ? (tabBarPosition === 'left' && direction === 'ltr') ||\n              (tabBarPosition === 'right' && direction === 'rtl')\n              ? 'row-reverse'\n              : 'row'\n            : 'column',\n      }}\n    >\n      {tabBarPosition === 'top' ? (\n        <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n          {renderTabBar()}\n        </BottomTabBarHeightCallbackContext.Provider>\n      ) : null}\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates={hasTwoStates}\n        style={styles.screens}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const {\n            lazy = true,\n            animation = 'none',\n            sceneStyleInterpolator = NAMED_TRANSITIONS_PRESETS[animation]\n              .sceneStyleInterpolator,\n          } = descriptor.options;\n          const isFocused = state.index === index;\n          const isPreloaded = state.preloadedRouteKeys.includes(route.key);\n\n          if (\n            lazy &&\n            !loaded.includes(route.key) &&\n            !isFocused &&\n            !isPreloaded\n          ) {\n            // Don't render a lazy screen if we've never navigated to it or it wasn't preloaded\n            return null;\n          }\n\n          const {\n            freezeOnBlur,\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n            headerShown,\n            headerStatusBarHeight,\n            headerTransparent,\n            sceneStyle: customSceneStyle,\n          } = descriptor.options;\n\n          const { sceneStyle } =\n            sceneStyleInterpolator?.({\n              current: {\n                progress: tabAnims[route.key],\n              },\n            }) ?? {};\n\n          const animationEnabled = hasAnimation(descriptor.options);\n          const activityState = isFocused\n            ? STATE_ON_TOP // the screen is on top after the transition\n            : animationEnabled // is animation is not enabled, immediately move to inactive state\n              ? tabAnims[route.key].interpolate({\n                  inputRange: [0, 1 - EPSILON, 1],\n                  outputRange: [\n                    STATE_TRANSITIONING_OR_BELOW_TOP, // screen visible during transition\n                    STATE_TRANSITIONING_OR_BELOW_TOP,\n                    STATE_INACTIVE, // the screen is detached after transition\n                  ],\n                  extrapolate: 'extend',\n                })\n              : STATE_INACTIVE;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              active={activityState}\n              enabled={detachInactiveScreens}\n              freezeOnBlur={freezeOnBlur}\n              shouldFreeze={activityState === STATE_INACTIVE && !isPreloaded}\n            >\n              <BottomTabBarHeightContext.Provider\n                value={tabBarPosition === 'bottom' ? tabBarHeight : 0}\n              >\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={headerShown}\n                  headerStatusBarHeight={headerStatusBarHeight}\n                  headerTransparent={headerTransparent}\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={[customSceneStyle, animationEnabled && sceneStyle]}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      {tabBarPosition !== 'top' ? (\n        <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n          {renderTabBar()}\n        </BottomTabBarHeightCallbackContext.Provider>\n      ) : null}\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screens: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}