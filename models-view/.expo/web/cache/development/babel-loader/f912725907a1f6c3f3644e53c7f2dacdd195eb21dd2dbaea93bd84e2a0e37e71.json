{"ast":null,"code":"var _jsxFileName = \"/app/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorHeader.tsx\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useLogs } from '../Data/LogContext';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LogBoxInspectorHeader(props) {\n  const {\n    selectedLogIndex: selectedIndex,\n    logs\n  } = useLogs();\n  const total = logs.length;\n  if (props.level === 'syntax') {\n    return _jsxDEV(View, {\n      style: [styles.safeArea, styles[props.level]],\n      children: _jsxDEV(View, {\n        style: styles.header,\n        children: _jsxDEV(View, {\n          style: styles.title,\n          children: _jsxDEV(Text, {\n            style: styles.titleText,\n            children: \"Failed to compile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n  return _jsxDEV(View, {\n    style: [styles.safeArea, styles[props.level]],\n    children: _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(LogBoxInspectorHeaderButton, {\n        disabled: total <= 1,\n        level: props.level,\n        image: require('@expo/metro-runtime/assets/chevron-left.png'),\n        onPress: () => props.onSelectIndex(prevIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.title,\n        children: _jsxDEV(Text, {\n          style: styles.titleText,\n          children: titleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), _jsxDEV(LogBoxInspectorHeaderButton, {\n        disabled: total <= 1,\n        level: props.level,\n        image: require('@expo/metro-runtime/assets/chevron-right.png'),\n        onPress: () => props.onSelectIndex(nextIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\nconst backgroundForLevel = level => ({\n  warn: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getWarningDarkColor()\n  },\n  error: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getErrorDarkColor()\n  },\n  fatal: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getFatalDarkColor()\n  },\n  syntax: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getFatalDarkColor()\n  },\n  static: {\n    default: 'transparent',\n    pressed: LogBoxStyle.getFatalDarkColor()\n  }\n})[level];\nfunction LogBoxInspectorHeaderButton(props) {\n  return _jsxDEV(LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? undefined : props.onPress,\n    style: headerStyles.button,\n    children: props.disabled ? null : _jsxDEV(Image, {\n      source: props.image,\n      tintColor: LogBoxStyle.getTextColor(),\n      style: headerStyles.buttonImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8\n  }\n});\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: true ? StatusBar.currentHeight : 40\n  }\n});","map":{"version":3,"names":["React","Image","Platform","StatusBar","StyleSheet","Text","View","useLogs","LogBoxButton","LogBoxStyle","jsxDEV","_jsxDEV","LogBoxInspectorHeader","props","selectedLogIndex","selectedIndex","logs","total","length","level","style","styles","safeArea","children","header","title","titleText","fileName","_jsxFileName","lineNumber","columnNumber","prevIndex","nextIndex","LogBoxInspectorHeaderButton","disabled","image","require","onPress","onSelectIndex","backgroundForLevel","warn","default","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","static","backgroundColor","undefined","headerStyles","button","source","tintColor","getTextColor","buttonImage","create","alignItems","justifyContent","aspectRatio","marginRight","marginLeft","borderRadius","height","width","getFatalColor","getWarningColor","getErrorColor","flexDirection","paddingHorizontal","select","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","currentHeight"],"sources":["/app/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { Image, Platform, StatusBar, StyleSheet, Text, View } from 'react-native';\n\nimport type { LogLevel } from '../Data/LogBoxLog';\nimport { useLogs } from '../Data/LogContext';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  onSelectIndex: (selectedIndex: number) => void;\n  level: LogLevel;\n};\n\nexport function LogBoxInspectorHeader(props: Props) {\n  const { selectedLogIndex: selectedIndex, logs } = useLogs();\n  const total = logs.length;\n\n  if (props.level === 'syntax') {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require('@expo/metro-runtime/assets/chevron-left.png')}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require('@expo/metro-runtime/assets/chevron-right.png')}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    static: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  })[level];\n\nfunction LogBoxInspectorHeaderButton(props: {\n  disabled: boolean;\n  image: number;\n  level: LogLevel;\n  onPress?: () => void;\n}) {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? undefined : props.onPress}\n      style={headerStyles.button}>\n      {props.disabled ? null : (\n        <Image\n          source={props.image}\n          tintColor={LogBoxStyle.getTextColor()}\n          style={headerStyles.buttonImage}\n        />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: process.env.EXPO_OS !== 'ios' ? StatusBar.currentHeight : 40,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}