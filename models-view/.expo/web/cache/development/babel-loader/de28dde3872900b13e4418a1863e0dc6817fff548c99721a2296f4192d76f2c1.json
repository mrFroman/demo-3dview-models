{"ast":null,"code":"var _jsxFileName = \"/app/app-example/components/Collapsible.tsx\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ThemedText } from '@/components/ThemedText';\nimport { ThemedView } from '@/components/ThemedView';\nimport { IconSymbol } from '@/components/ui/IconSymbol';\nimport { Colors } from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Collapsible({\n  children,\n  title\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useColorScheme() ?? 'light';\n  return _jsxDEV(ThemedView, {\n    children: [_jsxDEV(TouchableOpacity, {\n      style: styles.heading,\n      onPress: () => setIsOpen(value => !value),\n      activeOpacity: 0.8,\n      children: [_jsxDEV(IconSymbol, {\n        name: \"chevron.right\",\n        size: 18,\n        weight: \"medium\",\n        color: theme === 'light' ? Colors.light.icon : Colors.dark.icon,\n        style: {\n          transform: [{\n            rotate: isOpen ? '90deg' : '0deg'\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), _jsxDEV(ThemedText, {\n        type: \"defaultSemiBold\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), isOpen && _jsxDEV(ThemedView, {\n      style: styles.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  heading: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6\n  },\n  content: {\n    marginTop: 6,\n    marginLeft: 24\n  }\n});","map":{"version":3,"names":["useState","StyleSheet","TouchableOpacity","ThemedText","ThemedView","IconSymbol","Colors","useColorScheme","jsxDEV","_jsxDEV","Collapsible","children","title","isOpen","setIsOpen","theme","style","styles","heading","onPress","value","activeOpacity","name","size","weight","color","light","icon","dark","transform","rotate","fileName","_jsxFileName","lineNumber","columnNumber","type","content","create","flexDirection","alignItems","gap","marginTop","marginLeft"],"sources":["/app/app-example/components/Collapsible.tsx"],"sourcesContent":["import { PropsWithChildren, useState } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { ThemedText } from '@/components/ThemedText';\nimport { ThemedView } from '@/components/ThemedView';\nimport { IconSymbol } from '@/components/ui/IconSymbol';\nimport { Colors } from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\n\nexport function Collapsible({ children, title }: PropsWithChildren & { title: string }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useColorScheme() ?? 'light';\n\n  return (\n    <ThemedView>\n      <TouchableOpacity\n        style={styles.heading}\n        onPress={() => setIsOpen((value) => !value)}\n        activeOpacity={0.8}>\n        <IconSymbol\n          name=\"chevron.right\"\n          size={18}\n          weight=\"medium\"\n          color={theme === 'light' ? Colors.light.icon : Colors.dark.icon}\n          style={{ transform: [{ rotate: isOpen ? '90deg' : '0deg' }] }}\n        />\n\n        <ThemedText type=\"defaultSemiBold\">{title}</ThemedText>\n      </TouchableOpacity>\n      {isOpen && <ThemedView style={styles.content}>{children}</ThemedView>}\n    </ThemedView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  heading: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  content: {\n    marginTop: 6,\n    marginLeft: 24,\n  },\n});\n"],"mappings":";AAAA,SAA4BA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAGpD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC;AAA6C,CAAC,EAAE;EACtF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMe,KAAK,GAAGR,cAAc,CAAC,CAAC,IAAI,OAAO;EAEzC,OACEE,OAAA,CAACL,UAAU;IAAAO,QAAA,GACTF,OAAA,CAACP,gBAAgB;MACfc,KAAK,EAAEC,MAAM,CAACC,OAAQ;MACtBC,OAAO,EAAEA,CAAA,KAAML,SAAS,CAAEM,KAAK,IAAK,CAACA,KAAK,CAAE;MAC5CC,aAAa,EAAE,GAAI;MAAAV,QAAA,GACnBF,OAAA,CAACJ,UAAU;QACTiB,IAAI,EAAC,eAAe;QACpBC,IAAI,EAAE,EAAG;QACTC,MAAM,EAAC,QAAQ;QACfC,KAAK,EAAEV,KAAK,KAAK,OAAO,GAAGT,MAAM,CAACoB,KAAK,CAACC,IAAI,GAAGrB,MAAM,CAACsB,IAAI,CAACD,IAAK;QAChEX,KAAK,EAAE;UAAEa,SAAS,EAAE,CAAC;YAAEC,MAAM,EAAEjB,MAAM,GAAG,OAAO,GAAG;UAAO,CAAC;QAAE;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,EAEFzB,OAAA,CAACN,UAAU;QAACgC,IAAI,EAAC,iBAAiB;QAAAxB,QAAA,EAAEC;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAClBrB,MAAM,IAAIJ,OAAA,CAACL,UAAU;MAACY,KAAK,EAAEC,MAAM,CAACmB,OAAQ;MAAAzB,QAAA,EAAEA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEjB;AAEA,MAAMjB,MAAM,GAAGhB,UAAU,CAACoC,MAAM,CAAC;EAC/BnB,OAAO,EAAE;IACPoB,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE;EACP,CAAC;EACDJ,OAAO,EAAE;IACPK,SAAS,EAAE,CAAC;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}