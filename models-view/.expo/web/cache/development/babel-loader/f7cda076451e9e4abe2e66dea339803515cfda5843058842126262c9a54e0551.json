{"ast":null,"code":"import { Colors } from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nexport function useThemeColor(props, colorName) {\n  const theme = useColorScheme() ?? 'light';\n  const colorFromProps = props[theme];\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}","map":{"version":3,"names":["Colors","useColorScheme","useThemeColor","props","colorName","theme","colorFromProps"],"sources":["/app/app-example/hooks/useThemeColor.ts"],"sourcesContent":["/**\n * Learn more about light and dark modes:\n * https://docs.expo.dev/guides/color-schemes/\n */\n\nimport { Colors } from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme() ?? 'light';\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n"],"mappings":"AAKA,SAASA,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,cAAc,QAAQ,wBAAwB;AAEvD,OAAO,SAASC,aAAaA,CAC3BC,KAAwC,EACxCC,SAA+D,EAC/D;EACA,MAAMC,KAAK,GAAGJ,cAAc,CAAC,CAAC,IAAI,OAAO;EACzC,MAAMK,cAAc,GAAGH,KAAK,CAACE,KAAK,CAAC;EAEnC,IAAIC,cAAc,EAAE;IAClB,OAAOA,cAAc;EACvB,CAAC,MAAM;IACL,OAAON,MAAM,CAACK,KAAK,CAAC,CAACD,SAAS,CAAC;EACjC;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}