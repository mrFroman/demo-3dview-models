{"ast":null,"code":"var _jsxFileName = \"/app/app-example/app/_layout.tsx\";\nimport { DarkTheme, DefaultTheme, ThemeProvider } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport { Stack } from 'expo-router';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect } from 'react';\nimport 'react-native-reanimated';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function RootLayout() {\n  const colorScheme = useColorScheme();\n  const [loaded] = useFonts({\n    SpaceMono: require('../assets/fonts/SpaceMono-Regular.ttf')\n  });\n  useEffect(() => {\n    if (loaded) {\n      SplashScreen.hideAsync();\n    }\n  }, [loaded]);\n  if (!loaded) {\n    return null;\n  }\n  return _jsxDEV(ThemeProvider, {\n    value: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: [_jsxDEV(Stack, {\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"(tabs)\",\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"+not-found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), _jsxDEV(StatusBar, {\n      style: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["DarkTheme","DefaultTheme","ThemeProvider","useFonts","Stack","SplashScreen","StatusBar","useEffect","useColorScheme","jsxDEV","_jsxDEV","preventAutoHideAsync","RootLayout","colorScheme","loaded","SpaceMono","require","hideAsync","value","children","Screen","name","options","headerShown","fileName","_jsxFileName","lineNumber","columnNumber","style"],"sources":["/app/app-example/app/_layout.tsx"],"sourcesContent":["import { DarkTheme, DefaultTheme, ThemeProvider } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport { Stack } from 'expo-router';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect } from 'react';\nimport 'react-native-reanimated';\n\nimport { useColorScheme } from '@/hooks/useColorScheme';\n\n// Prevent the splash screen from auto-hiding before asset loading is complete.\nSplashScreen.preventAutoHideAsync();\n\nexport default function RootLayout() {\n  const colorScheme = useColorScheme();\n  const [loaded] = useFonts({\n    SpaceMono: require('../assets/fonts/SpaceMono-Regular.ttf'),\n  });\n\n  useEffect(() => {\n    if (loaded) {\n      SplashScreen.hideAsync();\n    }\n  }, [loaded]);\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <ThemeProvider value={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <Stack>\n        <Stack.Screen name=\"(tabs)\" options={{ headerShown: false }} />\n        <Stack.Screen name=\"+not-found\" />\n      </Stack>\n      <StatusBar style=\"auto\" />\n    </ThemeProvider>\n  );\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,0BAA0B;AACjF,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,yBAAyB;AAEhC,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxDL,YAAY,CAACM,oBAAoB,CAAC,CAAC;AAEnC,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,MAAMC,WAAW,GAAGL,cAAc,CAAC,CAAC;EACpC,MAAM,CAACM,MAAM,CAAC,GAAGX,QAAQ,CAAC;IACxBY,SAAS,EAAEC,OAAO,CAAC,uCAAuC;EAC5D,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,EAAE;MACVT,YAAY,CAACY,SAAS,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,OACEJ,OAAA,CAACR,aAAa;IAACgB,KAAK,EAAEL,WAAW,KAAK,MAAM,GAAGb,SAAS,GAAGC,YAAa;IAAAkB,QAAA,GACtET,OAAA,CAACN,KAAK;MAAAe,QAAA,GACJT,OAAA,CAACN,KAAK,CAACgB,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/DjB,OAAA,CAACN,KAAK,CAACgB,MAAM;QAACC,IAAI,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACRjB,OAAA,CAACJ,SAAS;MAACsB,KAAK,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEpB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}