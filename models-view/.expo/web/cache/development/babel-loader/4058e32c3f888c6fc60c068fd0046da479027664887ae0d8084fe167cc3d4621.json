{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"screen\", \"params\", \"action\", \"href\"],\n  _excluded2 = [\"variant\", \"color\", \"android_ripple\", \"style\", \"children\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = Button;\nvar _native = require(\"@react-navigation/native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _PlatformPressable = require(\"./PlatformPressable.js\");\nvar _Text = require(\"./Text.js\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nconst BUTTON_RADIUS = 40;\nfunction Button(props) {\n  if ('screen' in props || 'action' in props) {\n    return (0, _jsxRuntime.jsx)(ButtonLink, Object.assign({}, props));\n  } else {\n    return (0, _jsxRuntime.jsx)(ButtonBase, Object.assign({}, props));\n  }\n}\nfunction ButtonLink(_ref) {\n  let {\n      screen,\n      params,\n      action,\n      href\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const props = (0, _native.useLinkProps)({\n    screen,\n    params,\n    action,\n    href\n  });\n  return (0, _jsxRuntime.jsx)(ButtonBase, Object.assign({}, rest, props));\n}\nfunction ButtonBase(_ref2) {\n  let {\n      variant = 'tinted',\n      color: customColor,\n      android_ripple,\n      style,\n      children\n    } = _ref2,\n    rest = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n  const {\n    colors,\n    fonts\n  } = (0, _native.useTheme)();\n  const color = customColor ?? colors.primary;\n  let backgroundColor;\n  let textColor;\n  switch (variant) {\n    case 'plain':\n      backgroundColor = 'transparent';\n      textColor = color;\n      break;\n    case 'tinted':\n      backgroundColor = (0, _color.default)(color).fade(0.85).string();\n      textColor = color;\n      break;\n    case 'filled':\n      backgroundColor = color;\n      textColor = (0, _color.default)(color).isDark() ? 'white' : (0, _color.default)(color).darken(0.71).string();\n      break;\n  }\n  return (0, _jsxRuntime.jsx)(_PlatformPressable.PlatformPressable, Object.assign({}, rest, {\n    android_ripple: Object.assign({\n      radius: BUTTON_RADIUS,\n      color: (0, _color.default)(textColor).fade(0.85).string()\n    }, android_ripple),\n    pressOpacity: _reactNative.Platform.OS === 'ios' ? undefined : 1,\n    hoverEffect: {\n      color: textColor\n    },\n    style: [{\n      backgroundColor\n    }, styles.button, style],\n    children: (0, _jsxRuntime.jsx)(_Text.Text, {\n      style: [{\n        color: textColor\n      }, fonts.regular, styles.text],\n      children: children\n    })\n  }));\n}\nconst styles = _reactNative.StyleSheet.create({\n  button: {\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    borderRadius: BUTTON_RADIUS\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0.1,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["_native","require","_color","_interopRequireDefault","React","_interopRequireWildcard","_reactNative","_PlatformPressable","_Text","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","BUTTON_RADIUS","Button","props","jsx","ButtonLink","assign","ButtonBase","_ref","screen","params","action","href","rest","_objectWithoutPropertiesLoose","_excluded","useLinkProps","_ref2","variant","color","customColor","android_ripple","style","children","_excluded2","colors","fonts","useTheme","primary","backgroundColor","textColor","fade","string","isDark","darken","PlatformPressable","radius","pressOpacity","Platform","OS","undefined","hoverEffect","styles","button","Text","regular","text","StyleSheet","create","paddingHorizontal","paddingVertical","borderRadius","fontSize","lineHeight","letterSpacing","textAlign"],"sources":["/app/node_modules/@react-navigation/elements/src/Button.tsx"],"sourcesContent":["import {\n  type LinkProps,\n  useLinkProps,\n  useTheme,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport {\n  PlatformPressable,\n  type Props as PlatformPressableProps,\n} from './PlatformPressable';\nimport { Text } from './Text';\n\ntype ButtonBaseProps = Omit<PlatformPressableProps, 'children'> & {\n  variant?: 'plain' | 'tinted' | 'filled';\n  color?: string;\n  children: string | string[];\n};\n\ntype ButtonLinkProps<ParamList extends ReactNavigation.RootParamList> =\n  LinkProps<ParamList> & Omit<ButtonBaseProps, 'onPress'>;\n\nconst BUTTON_RADIUS = 40;\n\nexport function Button<ParamList extends ReactNavigation.RootParamList>(\n  props: ButtonLinkProps<ParamList>\n): React.JSX.Element;\n\nexport function Button(props: ButtonBaseProps): React.JSX.Element;\n\nexport function Button<ParamList extends ReactNavigation.RootParamList>(\n  props: ButtonBaseProps | ButtonLinkProps<ParamList>\n) {\n  if ('screen' in props || 'action' in props) {\n    // @ts-expect-error: This is already type-checked by the prop types\n    return <ButtonLink {...props} />;\n  } else {\n    return <ButtonBase {...props} />;\n  }\n}\n\nfunction ButtonLink<ParamList extends ReactNavigation.RootParamList>({\n  screen,\n  params,\n  action,\n  href,\n  ...rest\n}: ButtonLinkProps<ParamList>) {\n  // @ts-expect-error: This is already type-checked by the prop types\n  const props = useLinkProps({ screen, params, action, href });\n\n  return <ButtonBase {...rest} {...props} />;\n}\n\nfunction ButtonBase({\n  variant = 'tinted',\n  color: customColor,\n  android_ripple,\n  style,\n  children,\n  ...rest\n}: ButtonBaseProps) {\n  const { colors, fonts } = useTheme();\n\n  const color = customColor ?? colors.primary;\n\n  let backgroundColor;\n  let textColor;\n\n  switch (variant) {\n    case 'plain':\n      backgroundColor = 'transparent';\n      textColor = color;\n      break;\n    case 'tinted':\n      backgroundColor = Color(color).fade(0.85).string();\n      textColor = color;\n      break;\n    case 'filled':\n      backgroundColor = color;\n      textColor = Color(color).isDark()\n        ? 'white'\n        : Color(color).darken(0.71).string();\n      break;\n  }\n\n  return (\n    <PlatformPressable\n      {...rest}\n      android_ripple={{\n        radius: BUTTON_RADIUS,\n        color: Color(textColor).fade(0.85).string(),\n        ...android_ripple,\n      }}\n      pressOpacity={Platform.OS === 'ios' ? undefined : 1}\n      hoverEffect={{ color: textColor }}\n      style={[{ backgroundColor }, styles.button, style]}\n    >\n      <Text style={[{ color: textColor }, fonts.regular, styles.text]}>\n        {children}\n      </Text>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    borderRadius: BUTTON_RADIUS,\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0.1,\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}