{"ast":null,"code":"var _jsxFileName = \"/app/app-example/components/HapticTab.tsx\";\nimport { PlatformPressable } from '@react-navigation/elements';\nimport * as Haptics from 'expo-haptics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HapticTab(props) {\n  return _jsxDEV(PlatformPressable, Object.assign({}, props, {\n    onPressIn: ev => {\n      if (false) {\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n      }\n      props.onPressIn?.(ev);\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["PlatformPressable","Haptics","jsxDEV","_jsxDEV","HapticTab","props","Object","assign","onPressIn","ev","impactAsync","ImpactFeedbackStyle","Light","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/app/app-example/components/HapticTab.tsx"],"sourcesContent":["import { BottomTabBarButtonProps } from '@react-navigation/bottom-tabs';\nimport { PlatformPressable } from '@react-navigation/elements';\nimport * as Haptics from 'expo-haptics';\n\nexport function HapticTab(props: BottomTabBarButtonProps) {\n  return (\n    <PlatformPressable\n      {...props}\n      onPressIn={(ev) => {\n        if (process.env.EXPO_OS === 'ios') {\n          // Add a soft haptic feedback when pressing down on the tabs.\n          Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n        }\n        props.onPressIn?.(ev);\n      }}\n    />\n  );\n}\n"],"mappings":";AACA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAO,KAAKC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,SAASC,SAASA,CAACC,KAA8B,EAAE;EACxD,OACEF,OAAA,CAACH,iBAAiB,EAAAM,MAAA,CAAAC,MAAA,KACZF,KAAK;IACTG,SAAS,EAAGC,EAAE,IAAK;MACjB,WAAmC;QAEjCR,OAAO,CAACS,WAAW,CAACT,OAAO,CAACU,mBAAmB,CAACC,KAAK,CAAC;MACxD;MACAP,KAAK,CAACG,SAAS,GAAGC,EAAE,CAAC;IACvB;EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}