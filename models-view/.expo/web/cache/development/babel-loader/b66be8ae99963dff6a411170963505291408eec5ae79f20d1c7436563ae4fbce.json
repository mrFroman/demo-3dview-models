{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BottomTabBar = BottomTabBar;\nexports.getTabBarHeight = void 0;\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _BottomTabBarHeightCallbackContext = require(\"../utils/BottomTabBarHeightCallbackContext.js\");\nvar _useIsKeyboardShown = require(\"../utils/useIsKeyboardShown.js\");\nvar _BottomTabItem = require(\"./BottomTabItem.js\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nconst TABBAR_HEIGHT_UIKIT = 49;\nconst TABBAR_HEIGHT_UIKIT_COMPACT = 32;\nconst SPACING_UIKIT = 15;\nconst SPACING_MATERIAL = 12;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst useNativeDriver = _reactNative.Platform.OS !== 'web';\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  dimensions\n}) => {\n  const {\n    tabBarLabelPosition\n  } = descriptors[state.routes[state.index].key].options;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (dimensions.width >= 768) {\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const {\n        tabBarItemStyle\n      } = descriptors[route.key].options;\n      const flattenedStyle = _reactNative.StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= dimensions.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nconst isCompact = ({\n  state,\n  descriptors,\n  dimensions\n}) => {\n  const {\n    tabBarPosition,\n    tabBarVariant\n  } = descriptors[state.routes[state.index].key].options;\n  if (tabBarPosition === 'left' || tabBarPosition === 'right' || tabBarVariant === 'material') {\n    return false;\n  }\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions\n  });\n  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {\n    return true;\n  }\n  return false;\n};\nconst getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style\n}) => {\n  const {\n    tabBarPosition\n  } = descriptors[state.routes[state.index].key].options;\n  const flattenedStyle = _reactNative.StyleSheet.flatten(style);\n  const customHeight = flattenedStyle && 'height' in flattenedStyle ? flattenedStyle.height : undefined;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  const inset = insets[tabBarPosition === 'top' ? 'top' : 'bottom'];\n  if (isCompact({\n    state,\n    descriptors,\n    dimensions\n  })) {\n    return TABBAR_HEIGHT_UIKIT_COMPACT + inset;\n  }\n  return TABBAR_HEIGHT_UIKIT + inset;\n};\nexports.getTabBarHeight = getTabBarHeight;\nfunction BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style\n}) {\n  const {\n    colors\n  } = (0, _native.useTheme)();\n  const {\n    direction\n  } = (0, _native.useLocale)();\n  const {\n    buildHref\n  } = (0, _native.useLinkBuilder)();\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n  const {\n    tabBarPosition = 'bottom',\n    tabBarShowLabel,\n    tabBarLabelPosition,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarVariant = 'uikit',\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor\n  } = focusedOptions;\n  if (tabBarVariant === 'material' && tabBarPosition !== 'left' && tabBarPosition !== 'right') {\n    throw new Error(\"The 'material' variant for tab bar is only supported when 'tabBarPosition' is set to 'left' or 'right'.\");\n  }\n  if (tabBarLabelPosition === 'below-icon' && tabBarVariant === 'uikit' && (tabBarPosition === 'left' || tabBarPosition === 'right')) {\n    throw new Error(\"The 'below-icon' label position for tab bar is only supported when 'tabBarPosition' is set to 'top' or 'bottom' when using the 'uikit' variant.\");\n  }\n  const dimensions = (0, _reactNativeSafeAreaContext.useSafeAreaFrame)();\n  const isKeyboardShown = (0, _useIsKeyboardShown.useIsKeyboardShown)();\n  const onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext);\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  const visibilityAnimationConfigRef = _react.default.useRef(tabBarVisibilityAnimationConfig);\n  _react.default.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  const [isTabBarHidden, setIsTabBarHidden] = _react.default.useState(!shouldShowTabBar);\n  const [visible] = _react.default.useState(() => new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0));\n  _react.default.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      const animation = visibilityAnimationConfig?.show?.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, Object.assign({\n        toValue: 1,\n        useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig?.show?.config)).start(({\n        finished\n      }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n      const animation = visibilityAnimationConfig?.hide?.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, Object.assign({\n        toValue: 0,\n        useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig?.hide?.config)).start();\n    }\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n  const [layout, setLayout] = _react.default.useState({\n    height: 0\n  });\n  const handleLayout = e => {\n    const {\n      height\n    } = e.nativeEvent.layout;\n    onHeightChange?.(height);\n    setLayout(layout => {\n      if (height === layout.height) {\n        return layout;\n      } else {\n        return {\n          height\n        };\n      }\n    });\n  };\n  const {\n    routes\n  } = state;\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    style: [tabBarStyle, style]\n  });\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions\n  });\n  const compact = isCompact({\n    state,\n    descriptors,\n    dimensions\n  });\n  const sidebar = tabBarPosition === 'left' || tabBarPosition === 'right';\n  const spacing = tabBarVariant === 'material' ? SPACING_MATERIAL : SPACING_UIKIT;\n  const tabBarBackgroundElement = tabBarBackground?.();\n  return (0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n    style: [tabBarPosition === 'left' ? styles.start : tabBarPosition === 'right' ? styles.end : styles.bottom, (_reactNative.Platform.OS === 'web' ? tabBarPosition === 'right' : direction === 'rtl' && tabBarPosition === 'left' || direction !== 'rtl' && tabBarPosition === 'right') ? {\n      borderLeftWidth: _reactNative.StyleSheet.hairlineWidth\n    } : (_reactNative.Platform.OS === 'web' ? tabBarPosition === 'left' : direction === 'rtl' && tabBarPosition === 'right' || direction !== 'rtl' && tabBarPosition === 'left') ? {\n      borderRightWidth: _reactNative.StyleSheet.hairlineWidth\n    } : tabBarPosition === 'top' ? {\n      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth\n    } : {\n      borderTopWidth: _reactNative.StyleSheet.hairlineWidth\n    }, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderColor: colors.border\n    }, sidebar ? {\n      paddingTop: (hasHorizontalLabels ? spacing : spacing / 2) + insets.top,\n      paddingBottom: (hasHorizontalLabels ? spacing : spacing / 2) + insets.bottom,\n      paddingStart: spacing + (tabBarPosition === 'left' ? insets.left : 0),\n      paddingEnd: spacing + (tabBarPosition === 'right' ? insets.right : 0),\n      minWidth: hasHorizontalLabels ? (0, _elements.getDefaultSidebarWidth)(dimensions) : 0\n    } : [{\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + insets[tabBarPosition === 'top' ? 'top' : 'bottom'] + _reactNative.StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : undefined\n    }, {\n      height: tabBarHeight,\n      paddingBottom: tabBarPosition === 'bottom' ? insets.bottom : 0,\n      paddingTop: tabBarPosition === 'top' ? insets.top : 0,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }], tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: sidebar ? undefined : handleLayout,\n    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n      pointerEvents: \"none\",\n      style: _reactNative.StyleSheet.absoluteFill,\n      children: tabBarBackgroundElement\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      accessibilityRole: \"tablist\",\n      style: sidebar ? styles.sideContent : styles.bottomContent,\n      children: routes.map((route, index) => {\n        const focused = index === state.index;\n        const {\n          options\n        } = descriptors[route.key];\n        const onPress = () => {\n          const event = navigation.emit({\n            type: 'tabPress',\n            target: route.key,\n            canPreventDefault: true\n          });\n          if (!focused && !event.defaultPrevented) {\n            navigation.dispatch(Object.assign({}, _native.CommonActions.navigate(route), {\n              target: state.key\n            }));\n          }\n        };\n        const onLongPress = () => {\n          navigation.emit({\n            type: 'tabLongPress',\n            target: route.key\n          });\n        };\n        const label = typeof options.tabBarLabel === 'function' ? options.tabBarLabel : (0, _elements.getLabel)({\n          label: options.tabBarLabel,\n          title: options.title\n        }, route.name);\n        const accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && _reactNative.Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;\n        return (0, _jsxRuntime.jsx)(_native.NavigationContext.Provider, {\n          value: descriptors[route.key].navigation,\n          children: (0, _jsxRuntime.jsx)(_native.NavigationRouteContext.Provider, {\n            value: route,\n            children: (0, _jsxRuntime.jsx)(_BottomTabItem.BottomTabItem, {\n              href: buildHref(route.name, route.params),\n              route: route,\n              descriptor: descriptors[route.key],\n              focused: focused,\n              horizontal: hasHorizontalLabels,\n              compact: compact,\n              sidebar: sidebar,\n              variant: tabBarVariant,\n              onPress: onPress,\n              onLongPress: onLongPress,\n              accessibilityLabel: accessibilityLabel,\n              testID: options.tabBarButtonTestID,\n              allowFontScaling: options.tabBarAllowFontScaling,\n              activeTintColor: tabBarActiveTintColor,\n              inactiveTintColor: tabBarInactiveTintColor,\n              activeBackgroundColor: tabBarActiveBackgroundColor,\n              inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n              button: options.tabBarButton,\n              icon: options.tabBarIcon ?? (({\n                color,\n                size\n              }) => (0, _jsxRuntime.jsx)(_elements.MissingIcon, {\n                color: color,\n                size: size\n              })),\n              badge: options.tabBarBadge,\n              badgeStyle: options.tabBarBadgeStyle,\n              label: label,\n              showLabel: tabBarShowLabel,\n              labelStyle: options.tabBarLabelStyle,\n              iconStyle: options.tabBarIconStyle,\n              style: [sidebar ? {\n                marginVertical: hasHorizontalLabels ? tabBarVariant === 'material' ? 0 : 1 : spacing / 2\n              } : styles.bottomItem, options.tabBarItemStyle]\n            })\n          })\n        }, route.key);\n      })\n    })]\n  });\n}\nconst styles = _reactNative.StyleSheet.create({\n  start: {\n    top: 0,\n    bottom: 0,\n    start: 0\n  },\n  end: {\n    top: 0,\n    bottom: 0,\n    end: 0\n  },\n  bottom: {\n    start: 0,\n    end: 0,\n    bottom: 0,\n    elevation: 8\n  },\n  bottomContent: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  sideContent: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  bottomItem: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["_elements","require","_native","_react","_interopRequireDefault","_reactNative","_reactNativeSafeAreaContext","_BottomTabBarHeightCallbackContext","_useIsKeyboardShown","_BottomTabItem","_jsxRuntime","e","__esModule","default","TABBAR_HEIGHT_UIKIT","TABBAR_HEIGHT_UIKIT_COMPACT","SPACING_UIKIT","SPACING_MATERIAL","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","descriptors","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","isCompact","tabBarPosition","tabBarVariant","isLandscape","horizontalLabels","isPad","getTabBarHeight","insets","style","customHeight","undefined","inset","exports","BottomTabBar","navigation","colors","useTheme","direction","useLocale","buildHref","useLinkBuilder","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","Error","useSafeAreaFrame","isKeyboardShown","useIsKeyboardShown","onHeightChange","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","Object","assign","toValue","duration","config","start","finished","hide","stopAnimation","layout","setLayout","handleLayout","nativeEvent","tabBarHeight","hasHorizontalLabels","compact","sidebar","spacing","tabBarBackgroundElement","jsxs","View","styles","end","bottom","borderLeftWidth","hairlineWidth","borderRightWidth","borderBottomWidth","borderTopWidth","backgroundColor","card","borderColor","border","paddingTop","top","paddingBottom","paddingStart","left","paddingEnd","right","minWidth","getDefaultSidebarWidth","transform","translateY","interpolate","inputRange","outputRange","position","paddingHorizontal","Math","max","pointerEvents","onLayout","children","jsx","absoluteFill","accessibilityRole","sideContent","bottomContent","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","onLongPress","label","tabBarLabel","getLabel","title","name","accessibilityLabel","tabBarAccessibilityLabel","length","NavigationContext","Provider","value","NavigationRouteContext","BottomTabItem","href","params","descriptor","horizontal","variant","testID","tabBarButtonTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","color","size","MissingIcon","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","marginVertical","bottomItem","create","elevation","flex","flexDirection"],"sources":["/app/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabBar.tsx"],"sourcesContent":["import {\n  getDefaultSidebarWidth,\n  getLabel,\n  MissingIcon,\n} from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  type ParamListBase,\n  type TabNavigationState,\n  useLinkBuilder,\n  useLocale,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  type LayoutChangeEvent,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewStyle,\n} from 'react-native';\nimport {\n  type EdgeInsets,\n  useSafeAreaFrame,\n} from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport { BottomTabBarHeightCallbackContext } from '../utils/BottomTabBarHeightCallbackContext';\nimport { useIsKeyboardShown } from '../utils/useIsKeyboardShown';\nimport { BottomTabItem } from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst TABBAR_HEIGHT_UIKIT = 49;\nconst TABBAR_HEIGHT_UIKIT_COMPACT = 32;\nconst SPACING_UIKIT = 15;\nconst SPACING_MATERIAL = 12;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (dimensions.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= dimensions.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst isCompact = ({ state, descriptors, dimensions }: Options): boolean => {\n  const { tabBarPosition, tabBarVariant } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (\n    tabBarPosition === 'left' ||\n    tabBarPosition === 'right' ||\n    tabBarVariant === 'material'\n  ) {\n    return false;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n  });\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  const { tabBarPosition } = descriptors[state.routes[state.index].key].options;\n\n  const flattenedStyle = StyleSheet.flatten(style);\n  const customHeight =\n    flattenedStyle && 'height' in flattenedStyle\n      ? flattenedStyle.height\n      : undefined;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const inset = insets[tabBarPosition === 'top' ? 'top' : 'bottom'];\n\n  if (isCompact({ state, descriptors, dimensions })) {\n    return TABBAR_HEIGHT_UIKIT_COMPACT + inset;\n  }\n\n  return TABBAR_HEIGHT_UIKIT + inset;\n};\n\nexport function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const { direction } = useLocale();\n  const { buildHref } = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarPosition = 'bottom',\n    tabBarShowLabel,\n    tabBarLabelPosition,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarVariant = 'uikit',\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  if (\n    tabBarVariant === 'material' &&\n    tabBarPosition !== 'left' &&\n    tabBarPosition !== 'right'\n  ) {\n    throw new Error(\n      \"The 'material' variant for tab bar is only supported when 'tabBarPosition' is set to 'left' or 'right'.\"\n    );\n  }\n\n  if (\n    tabBarLabelPosition === 'below-icon' &&\n    tabBarVariant === 'uikit' &&\n    (tabBarPosition === 'left' || tabBarPosition === 'right')\n  ) {\n    throw new Error(\n      \"The 'below-icon' label position for tab bar is only supported when 'tabBarPosition' is set to 'top' or 'bottom' when using the 'uikit' variant.\"\n    );\n  }\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      // eslint-disable-next-line @eslint-react/hooks-extra/no-direct-set-state-in-use-effect\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height) {\n        return layout;\n      } else {\n        return { height };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n  });\n\n  const compact = isCompact({ state, descriptors, dimensions });\n  const sidebar = tabBarPosition === 'left' || tabBarPosition === 'right';\n  const spacing =\n    tabBarVariant === 'material' ? SPACING_MATERIAL : SPACING_UIKIT;\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        tabBarPosition === 'left'\n          ? styles.start\n          : tabBarPosition === 'right'\n            ? styles.end\n            : styles.bottom,\n        (\n          Platform.OS === 'web'\n            ? tabBarPosition === 'right'\n            : (direction === 'rtl' && tabBarPosition === 'left') ||\n              (direction !== 'rtl' && tabBarPosition === 'right')\n        )\n          ? { borderLeftWidth: StyleSheet.hairlineWidth }\n          : (\n                Platform.OS === 'web'\n                  ? tabBarPosition === 'left'\n                  : (direction === 'rtl' && tabBarPosition === 'right') ||\n                    (direction !== 'rtl' && tabBarPosition === 'left')\n              )\n            ? { borderRightWidth: StyleSheet.hairlineWidth }\n            : tabBarPosition === 'top'\n              ? { borderBottomWidth: StyleSheet.hairlineWidth }\n              : { borderTopWidth: StyleSheet.hairlineWidth },\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderColor: colors.border,\n        },\n        sidebar\n          ? {\n              paddingTop:\n                (hasHorizontalLabels ? spacing : spacing / 2) + insets.top,\n              paddingBottom:\n                (hasHorizontalLabels ? spacing : spacing / 2) + insets.bottom,\n              paddingStart:\n                spacing + (tabBarPosition === 'left' ? insets.left : 0),\n              paddingEnd:\n                spacing + (tabBarPosition === 'right' ? insets.right : 0),\n              minWidth: hasHorizontalLabels\n                ? getDefaultSidebarWidth(dimensions)\n                : 0,\n            }\n          : [\n              {\n                transform: [\n                  {\n                    translateY: visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [\n                        layout.height +\n                          insets[tabBarPosition === 'top' ? 'top' : 'bottom'] +\n                          StyleSheet.hairlineWidth,\n                        0,\n                      ],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: isTabBarHidden ? 'absolute' : undefined,\n              },\n              {\n                height: tabBarHeight,\n                paddingBottom: tabBarPosition === 'bottom' ? insets.bottom : 0,\n                paddingTop: tabBarPosition === 'top' ? insets.top : 0,\n                paddingHorizontal: Math.max(insets.left, insets.right),\n              },\n            ],\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={sidebar ? undefined : handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View\n        accessibilityRole=\"tablist\"\n        style={sidebar ? styles.sideContent : styles.bottomContent}\n      >\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            typeof options.tabBarLabel === 'function'\n              ? options.tabBarLabel\n              : getLabel(\n                  { label: options.tabBarLabel, title: options.title },\n                  route.name\n                );\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n                ? `${label}, tab, ${index + 1} of ${routes.length}`\n                : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  href={buildHref(route.name, route.params)}\n                  route={route}\n                  descriptor={descriptors[route.key]}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  compact={compact}\n                  sidebar={sidebar}\n                  variant={tabBarVariant}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  testID={options.tabBarButtonTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={[\n                    sidebar\n                      ? {\n                          marginVertical: hasHorizontalLabels\n                            ? tabBarVariant === 'material'\n                              ? 0\n                              : 1\n                            : spacing / 2,\n                        }\n                      : styles.bottomItem,\n                    options.tabBarItemStyle,\n                  ]}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  start: {\n    top: 0,\n    bottom: 0,\n    start: 0,\n  },\n  end: {\n    top: 0,\n    bottom: 0,\n    end: 0,\n  },\n  bottom: {\n    start: 0,\n    end: 0,\n    bottom: 0,\n    elevation: 8,\n  },\n  bottomContent: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  sideContent: {\n    flex: 1,\n    flexDirection: 'column',\n  },\n  bottomItem: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}