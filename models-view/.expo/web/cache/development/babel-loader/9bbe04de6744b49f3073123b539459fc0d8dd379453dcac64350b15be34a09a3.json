{"ast":null,"code":"import { CodedError } from 'expo-modules-core';\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { WebBrowserResultType } from './WebBrowser.types';\nconst POPUP_WIDTH = 500;\nconst POPUP_HEIGHT = 650;\nlet popupWindow = null;\nconst listenerMap = new Map();\nconst getHandle = () => 'ExpoWebBrowserRedirectHandle';\nconst getOriginUrlHandle = hash => `ExpoWebBrowser_OriginUrl_${hash}`;\nconst getRedirectUrlHandle = hash => `ExpoWebBrowser_RedirectUrl_${hash}`;\nexport function normalizeUrl(url) {\n  const origin = url.origin.replace(url.protocol, '').replace(/^\\/+/, '').replace(/\\/+$/, '');\n  return (origin + decodeURI(url.pathname.replace(/\\/{2,}/g, '/'))).toLowerCase();\n}\nfunction dismissPopup() {\n  if (!popupWindow) {\n    return;\n  }\n  popupWindow.close();\n  if (listenerMap.has(popupWindow)) {\n    const {\n      listener,\n      appStateSubscription,\n      interval\n    } = listenerMap.get(popupWindow);\n    clearInterval(interval);\n    window.removeEventListener('message', listener);\n    appStateSubscription.remove();\n    listenerMap.delete(popupWindow);\n    const handle = window.localStorage.getItem(getHandle());\n    if (handle) {\n      window.localStorage.removeItem(getHandle());\n      window.localStorage.removeItem(getOriginUrlHandle(handle));\n      window.localStorage.removeItem(getRedirectUrlHandle(handle));\n    }\n    popupWindow = null;\n  }\n}\nexport default {\n  async openBrowserAsync(url, browserParams = {}) {\n    if (false) {\n      return {\n        type: WebBrowserResultType.CANCEL\n      };\n    }\n    const {\n      windowName = '_blank',\n      windowFeatures\n    } = browserParams;\n    const features = getPopupFeaturesString(windowFeatures);\n    window.open(url, windowName, features);\n    return {\n      type: WebBrowserResultType.OPENED\n    };\n  },\n  dismissAuthSession() {\n    if (false) return;\n    dismissPopup();\n  },\n  maybeCompleteAuthSession({\n    skipRedirectCheck\n  }) {\n    if (false) {\n      return {\n        type: 'failed',\n        message: 'Cannot use expo-web-browser in a non-browser environment'\n      };\n    }\n    const handle = window.localStorage.getItem(getHandle());\n    if (!handle) {\n      return {\n        type: 'failed',\n        message: 'No auth session is currently in progress'\n      };\n    }\n    const url = window.location.href;\n    if (skipRedirectCheck !== true) {\n      const redirectUrl = window.localStorage.getItem(getRedirectUrlHandle(handle));\n      const currentUrl = normalizeUrl(window.location);\n      if (redirectUrl !== currentUrl) {\n        return {\n          type: 'failed',\n          message: `Current URL \"${currentUrl}\" and original redirect URL \"${redirectUrl}\" do not match.`\n        };\n      }\n    }\n    window.localStorage.setItem(getOriginUrlHandle(handle), url);\n    const parent = window.opener ?? window.parent;\n    if (!parent) {\n      throw new CodedError('ERR_WEB_BROWSER_REDIRECT', `The window cannot complete the redirect request because the invoking window doesn't have a reference to it's parent. This can happen if the parent window was reloaded.`);\n    }\n    parent.postMessage({\n      url,\n      expoSender: handle\n    }, parent.location.toString());\n    return {\n      type: 'success',\n      message: `Attempting to complete auth`\n    };\n  },\n  async openAuthSessionAsync(url, redirectUrl, openOptions) {\n    if (false) return {\n      type: WebBrowserResultType.CANCEL\n    };\n    redirectUrl = redirectUrl ?? getRedirectUrlFromUrlOrGenerate(url);\n    if (popupWindow == null || popupWindow?.closed) {\n      const features = getPopupFeaturesString(openOptions?.windowFeatures);\n      popupWindow = window.open(url, openOptions?.windowName, features);\n      if (popupWindow) {\n        try {\n          popupWindow.focus();\n        } catch {}\n      } else {\n        throw new CodedError('ERR_WEB_BROWSER_BLOCKED', 'Popup window was blocked by the browser or failed to open. This can happen in mobile browsers when the window.open() method was invoked too long after a user input was fired.');\n      }\n    }\n    const state = await getStateFromUrlOrGenerateAsync(url);\n    window.localStorage.setItem(getHandle(), state);\n    const normalizedRedirectUrl = (() => {\n      if (!redirectUrl) return redirectUrl;\n      try {\n        return normalizeUrl(new URL(redirectUrl));\n      } catch {\n        return redirectUrl;\n      }\n    })();\n    window.localStorage.setItem(getRedirectUrlHandle(state), normalizedRedirectUrl);\n    return new Promise(async resolve => {\n      const listener = event => {\n        if (!event.isTrusted) return;\n        if (event.origin !== window.location.origin) {\n          return;\n        }\n        const {\n          data\n        } = event;\n        const handle = window.localStorage.getItem(getHandle());\n        if (data.expoSender === handle) {\n          dismissPopup();\n          resolve({\n            type: 'success',\n            url: data.url\n          });\n        }\n      };\n      window.addEventListener('message', listener, false);\n      const appStateListener = state => {\n        if (state !== 'active') {\n          return;\n        }\n        const handle = window.localStorage.getItem(getHandle());\n        if (handle) {\n          const url = window.localStorage.getItem(getOriginUrlHandle(handle));\n          if (url) {\n            dismissPopup();\n            resolve({\n              type: 'success',\n              url\n            });\n          }\n        }\n      };\n      const appStateSubscription = AppState.addEventListener('change', appStateListener);\n      const interval = setInterval(() => {\n        if (popupWindow?.closed) {\n          if (resolve) resolve({\n            type: WebBrowserResultType.DISMISS\n          });\n          clearInterval(interval);\n          dismissPopup();\n        }\n      }, 1000);\n      listenerMap.set(popupWindow, {\n        listener,\n        interval,\n        appStateSubscription\n      });\n    });\n  }\n};\nfunction isCryptoAvailable() {\n  if (false) return false;\n  return !!window?.crypto;\n}\nfunction isSubtleCryptoAvailable() {\n  if (!isCryptoAvailable()) return false;\n  return !!window.crypto.subtle;\n}\nasync function getStateFromUrlOrGenerateAsync(inputUrl) {\n  const url = new URL(inputUrl);\n  if (url.searchParams.has('state') && typeof url.searchParams.get('state') === 'string') {\n    return url.searchParams.get('state');\n  }\n  return await generateStateAsync();\n}\nfunction getRedirectUrlFromUrlOrGenerate(inputUrl) {\n  const url = new URL(inputUrl);\n  if (url.searchParams.has('redirect_uri') && typeof url.searchParams.get('redirect_uri') === 'string') {\n    return url.searchParams.get('redirect_uri');\n  }\n  return location.origin + location.pathname;\n}\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nasync function generateStateAsync() {\n  if (!isSubtleCryptoAvailable()) {\n    throw new CodedError('ERR_WEB_BROWSER_CRYPTO', `The current environment doesn't support crypto. Ensure you are running from a secure origin (localhost/https).`);\n  }\n  const encoder = new TextEncoder();\n  const data = generateRandom(10);\n  const buffer = encoder.encode(data);\n  const hashedData = await crypto.subtle.digest('SHA-256', buffer);\n  const state = btoa(String.fromCharCode(...new Uint8Array(hashedData)));\n  return state;\n}\nfunction generateRandom(size) {\n  let arr = new Uint8Array(size);\n  if (arr.byteLength !== arr.length) {\n    arr = new Uint8Array(arr.buffer);\n  }\n  const array = new Uint8Array(arr.length);\n  if (isCryptoAvailable()) {\n    window.crypto.getRandomValues(array);\n  } else {\n    for (let i = 0; i < size; i += 1) {\n      array[i] = Math.random() * CHARSET.length | 0;\n    }\n  }\n  return bufferToString(array);\n}\nfunction bufferToString(buffer) {\n  const state = [];\n  for (let i = 0; i < buffer.byteLength; i += 1) {\n    const index = buffer[i] % CHARSET.length;\n    state.push(CHARSET[index]);\n  }\n  return state.join('');\n}\nfunction normalizePopupFeaturesString(options) {\n  let windowFeatures = {};\n  if (typeof options === 'string') {\n    const windowFeaturePairs = options.split(',');\n    for (const pair of windowFeaturePairs) {\n      const [key, value] = pair.trim().split('=');\n      if (key && value) {\n        windowFeatures[key] = value;\n      }\n    }\n  } else if (options) {\n    windowFeatures = options;\n  }\n  return windowFeatures;\n}\nfunction getPopupFeaturesString(options) {\n  const windowFeatures = normalizePopupFeaturesString(options);\n  const width = windowFeatures.width ?? POPUP_WIDTH;\n  const height = windowFeatures.height ?? POPUP_HEIGHT;\n  const top = windowFeatures.top ?? Math.max(0, (window.screen.height - height) * 0.5);\n  const left = windowFeatures.left ?? Math.max(0, (window.screen.width - width) * 0.5);\n  return featureObjectToString(Object.assign({}, windowFeatures, {\n    toolbar: windowFeatures.toolbar ?? 'no',\n    menubar: windowFeatures.menubar ?? 'no',\n    location: windowFeatures.location ?? 'yes',\n    resizable: windowFeatures.resizable ?? 'yes',\n    status: windowFeatures.status ?? 'no',\n    scrollbars: windowFeatures.scrollbars ?? 'yes',\n    top,\n    left,\n    width,\n    height\n  }));\n}\nexport function featureObjectToString(features) {\n  return Object.keys(features).reduce((prev, current) => {\n    let value = features[current];\n    if (typeof value === 'boolean') {\n      value = value ? 'yes' : 'no';\n    }\n    if (current && value) {\n      if (prev) prev += ',';\n      return `${prev}${current}=${value}`;\n    }\n    return prev;\n  }, '');\n}","map":{"version":3,"names":["CodedError","AppState","WebBrowserResultType","POPUP_WIDTH","POPUP_HEIGHT","popupWindow","listenerMap","Map","getHandle","getOriginUrlHandle","hash","getRedirectUrlHandle","normalizeUrl","url","origin","replace","protocol","decodeURI","pathname","toLowerCase","dismissPopup","close","has","listener","appStateSubscription","interval","get","clearInterval","window","removeEventListener","remove","delete","handle","localStorage","getItem","removeItem","openBrowserAsync","browserParams","type","CANCEL","windowName","windowFeatures","features","getPopupFeaturesString","open","OPENED","dismissAuthSession","maybeCompleteAuthSession","skipRedirectCheck","message","location","href","redirectUrl","currentUrl","setItem","parent","opener","postMessage","expoSender","toString","openAuthSessionAsync","openOptions","getRedirectUrlFromUrlOrGenerate","closed","focus","state","getStateFromUrlOrGenerateAsync","normalizedRedirectUrl","URL","Promise","resolve","event","isTrusted","data","addEventListener","appStateListener","setInterval","DISMISS","set","isCryptoAvailable","crypto","isSubtleCryptoAvailable","subtle","inputUrl","searchParams","generateStateAsync","CHARSET","encoder","TextEncoder","generateRandom","buffer","encode","hashedData","digest","btoa","String","fromCharCode","Uint8Array","size","arr","byteLength","length","array","getRandomValues","i","Math","random","bufferToString","index","push","join","normalizePopupFeaturesString","options","windowFeaturePairs","split","pair","key","value","trim","width","height","top","max","screen","left","featureObjectToString","Object","assign","toolbar","menubar","resizable","status","scrollbars","keys","reduce","prev","current"],"sources":["/app/node_modules/expo-web-browser/src/ExpoWebBrowser.web.ts"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\nimport { AppState } from 'react-native';\nimport type { AppStateStatus, NativeEventSubscription } from 'react-native';\n\nimport {\n  WebBrowserAuthSessionResult,\n  WebBrowserOpenOptions,\n  WebBrowserResult,\n  WebBrowserResultType,\n  WebBrowserWindowFeatures,\n} from './WebBrowser.types';\n\nconst POPUP_WIDTH = 500;\nconst POPUP_HEIGHT = 650;\n\nlet popupWindow: Window | null = null;\n\nconst listenerMap = new Map();\n\nconst getHandle = () => 'ExpoWebBrowserRedirectHandle';\nconst getOriginUrlHandle = (hash: string) => `ExpoWebBrowser_OriginUrl_${hash}`;\nconst getRedirectUrlHandle = (hash: string) => `ExpoWebBrowser_RedirectUrl_${hash}`;\n\nexport function normalizeUrl(url: URL | Location) {\n  const origin = url.origin.replace(url.protocol, '').replace(/^\\/+/, '').replace(/\\/+$/, '');\n  return (origin + decodeURI(url.pathname.replace(/\\/{2,}/g, '/'))).toLowerCase();\n}\n\nfunction dismissPopup() {\n  if (!popupWindow) {\n    return;\n  }\n  popupWindow.close();\n  if (listenerMap.has(popupWindow)) {\n    const { listener, appStateSubscription, interval } = listenerMap.get(popupWindow);\n    clearInterval(interval);\n    window.removeEventListener('message', listener);\n    (appStateSubscription as NativeEventSubscription).remove();\n    listenerMap.delete(popupWindow);\n\n    const handle = window.localStorage.getItem(getHandle());\n    if (handle) {\n      window.localStorage.removeItem(getHandle());\n      window.localStorage.removeItem(getOriginUrlHandle(handle));\n      window.localStorage.removeItem(getRedirectUrlHandle(handle));\n    }\n\n    popupWindow = null;\n  }\n}\n\nexport default {\n  async openBrowserAsync(\n    url: string,\n    browserParams: WebBrowserOpenOptions = {}\n  ): Promise<WebBrowserResult> {\n    if (typeof window === 'undefined') {\n      return { type: WebBrowserResultType.CANCEL };\n    }\n    const { windowName = '_blank', windowFeatures } = browserParams;\n    const features = getPopupFeaturesString(windowFeatures);\n    window.open(url, windowName, features);\n    return { type: WebBrowserResultType.OPENED };\n  },\n  dismissAuthSession() {\n    if (typeof window === 'undefined') return;\n    dismissPopup();\n  },\n  maybeCompleteAuthSession({ skipRedirectCheck }: { skipRedirectCheck?: boolean }): {\n    type: 'success' | 'failed';\n    message: string;\n  } {\n    if (typeof window === 'undefined') {\n      return {\n        type: 'failed',\n        message: 'Cannot use expo-web-browser in a non-browser environment',\n      };\n    }\n    const handle = window.localStorage.getItem(getHandle());\n\n    if (!handle) {\n      return { type: 'failed', message: 'No auth session is currently in progress' };\n    }\n\n    const url = window.location.href;\n\n    if (skipRedirectCheck !== true) {\n      const redirectUrl = window.localStorage.getItem(getRedirectUrlHandle(handle));\n      // Compare the original redirect url against the current url with it's query params removed.\n      const currentUrl = normalizeUrl(window.location);\n      if (redirectUrl !== currentUrl) {\n        return {\n          type: 'failed',\n          message: `Current URL \"${currentUrl}\" and original redirect URL \"${redirectUrl}\" do not match.`,\n        };\n      }\n    }\n\n    // Save the link for app state listener\n    window.localStorage.setItem(getOriginUrlHandle(handle), url);\n\n    // Get the window that created the current popup\n    const parent = window.opener ?? window.parent;\n    if (!parent) {\n      throw new CodedError(\n        'ERR_WEB_BROWSER_REDIRECT',\n        `The window cannot complete the redirect request because the invoking window doesn't have a reference to it's parent. This can happen if the parent window was reloaded.`\n      );\n    }\n    // Send the URL back to the opening window.\n    parent.postMessage({ url, expoSender: handle }, parent.location.toString());\n    return { type: 'success', message: `Attempting to complete auth` };\n\n    // Maybe set timer to throw an error if the window is still open after attempting to complete.\n  },\n  // This method should be invoked from user input.\n  async openAuthSessionAsync(\n    url: string,\n    redirectUrl?: string,\n    openOptions?: WebBrowserOpenOptions\n  ): Promise<WebBrowserAuthSessionResult> {\n    if (typeof window === 'undefined') return { type: WebBrowserResultType.CANCEL };\n\n    redirectUrl = redirectUrl ?? getRedirectUrlFromUrlOrGenerate(url);\n\n    if (popupWindow == null || popupWindow?.closed) {\n      const features = getPopupFeaturesString(openOptions?.windowFeatures);\n      popupWindow = window.open(url, openOptions?.windowName, features);\n\n      if (popupWindow) {\n        try {\n          popupWindow.focus();\n        } catch {}\n      } else {\n        throw new CodedError(\n          'ERR_WEB_BROWSER_BLOCKED',\n          'Popup window was blocked by the browser or failed to open. This can happen in mobile browsers when the window.open() method was invoked too long after a user input was fired.'\n        );\n      }\n    }\n\n    const state = await getStateFromUrlOrGenerateAsync(url);\n\n    // Save handle for session\n    window.localStorage.setItem(getHandle(), state);\n\n    const normalizedRedirectUrl = (() => {\n      if (!redirectUrl) return redirectUrl;\n      try {\n        return normalizeUrl(new URL(redirectUrl));\n      } catch {\n        return redirectUrl;\n      }\n    })();\n\n    // Save redirect Url for further verification\n    window.localStorage.setItem(getRedirectUrlHandle(state), normalizedRedirectUrl);\n\n    return new Promise(async (resolve) => {\n      // Create a listener for messages sent from the popup\n      const listener = (event: MessageEvent) => {\n        if (!event.isTrusted) return;\n        // Ensure we trust the sender.\n        if (event.origin !== window.location.origin) {\n          return;\n        }\n        const { data } = event;\n        // Use a crypto hash to invalid message.\n        const handle = window.localStorage.getItem(getHandle());\n        // Ensure the sender is also from expo-web-browser\n        if (data.expoSender === handle) {\n          dismissPopup();\n          resolve({ type: 'success', url: data.url });\n        }\n      };\n\n      // Add a listener for receiving messages from the popup.\n      window.addEventListener('message', listener, false);\n\n      // Create an app state listener as a fallback to the popup listener\n      const appStateListener = (state: AppStateStatus) => {\n        if (state !== 'active') {\n          return;\n        }\n        const handle = window.localStorage.getItem(getHandle());\n        if (handle) {\n          const url = window.localStorage.getItem(getOriginUrlHandle(handle));\n          if (url) {\n            dismissPopup();\n            resolve({ type: 'success', url });\n          }\n        }\n      };\n\n      const appStateSubscription = AppState.addEventListener('change', appStateListener);\n\n      // Check if the window has been closed every second.\n      const interval = setInterval(() => {\n        if (popupWindow?.closed) {\n          if (resolve) resolve({ type: WebBrowserResultType.DISMISS });\n          clearInterval(interval);\n          dismissPopup();\n        }\n      }, 1000);\n\n      // Store the listener and interval for clean up.\n      listenerMap.set(popupWindow, {\n        listener,\n        interval,\n        appStateSubscription,\n      });\n    });\n  },\n};\n\n// Crypto\nfunction isCryptoAvailable(): boolean {\n  if (typeof window === 'undefined') return false;\n  return !!(window?.crypto as any);\n}\n\nfunction isSubtleCryptoAvailable(): boolean {\n  if (!isCryptoAvailable()) return false;\n  return !!(window.crypto.subtle as any);\n}\n\nasync function getStateFromUrlOrGenerateAsync(inputUrl: string): Promise<string> {\n  const url = new URL(inputUrl);\n  if (url.searchParams.has('state') && typeof url.searchParams.get('state') === 'string') {\n    // Ensure we reuse the auth state if it's passed in.\n    return url.searchParams.get('state')!;\n  }\n  // Generate a crypto state for verifying the return popup.\n  return await generateStateAsync();\n}\n\nfunction getRedirectUrlFromUrlOrGenerate(inputUrl: string): string {\n  const url = new URL(inputUrl);\n  if (\n    url.searchParams.has('redirect_uri') &&\n    typeof url.searchParams.get('redirect_uri') === 'string'\n  ) {\n    // Ensure we reuse the redirect_uri if it's passed in the input url.\n    return url.searchParams.get('redirect_uri')!;\n  }\n  // Emulate how native uses Constants.linkingUrl\n  return location.origin + location.pathname;\n}\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nasync function generateStateAsync(): Promise<string> {\n  if (!isSubtleCryptoAvailable()) {\n    throw new CodedError(\n      'ERR_WEB_BROWSER_CRYPTO',\n      `The current environment doesn't support crypto. Ensure you are running from a secure origin (localhost/https).`\n    );\n  }\n  const encoder = new TextEncoder();\n\n  const data = generateRandom(10);\n  const buffer = encoder.encode(data);\n  const hashedData = await crypto.subtle.digest('SHA-256', buffer);\n  const state = btoa(String.fromCharCode(...new Uint8Array(hashedData)));\n  return state;\n}\n\nfunction generateRandom(size: number): string {\n  let arr = new Uint8Array(size);\n  if (arr.byteLength !== arr.length) {\n    arr = new Uint8Array(arr.buffer);\n  }\n  const array = new Uint8Array(arr.length);\n  if (isCryptoAvailable()) {\n    window.crypto.getRandomValues(array);\n  } else {\n    for (let i = 0; i < size; i += 1) {\n      array[i] = (Math.random() * CHARSET.length) | 0;\n    }\n  }\n  return bufferToString(array);\n}\n\nfunction bufferToString(buffer): string {\n  const state: string[] = [];\n  for (let i = 0; i < buffer.byteLength; i += 1) {\n    const index = buffer[i] % CHARSET.length;\n    state.push(CHARSET[index]);\n  }\n  return state.join('');\n}\n\n// Window Features\n\n// Ensure feature string is an object\nfunction normalizePopupFeaturesString(\n  options?: WebBrowserWindowFeatures | string\n): Record<string, any> {\n  let windowFeatures: Record<string, any> = {};\n  // This should be avoided because it adds extra time to the popup command.\n  if (typeof options === 'string') {\n    // Convert string of `key=value,foo=bar` into an object\n    const windowFeaturePairs = options.split(',');\n    for (const pair of windowFeaturePairs) {\n      const [key, value] = pair.trim().split('=');\n      if (key && value) {\n        windowFeatures[key] = value;\n      }\n    }\n  } else if (options) {\n    windowFeatures = options;\n  }\n  return windowFeatures;\n}\n\n// Apply default values to the input feature set\nfunction getPopupFeaturesString(options?: WebBrowserWindowFeatures | string): string {\n  const windowFeatures = normalizePopupFeaturesString(options);\n\n  const width = windowFeatures.width ?? POPUP_WIDTH;\n  const height = windowFeatures.height ?? POPUP_HEIGHT;\n\n  const top = windowFeatures.top ?? Math.max(0, (window.screen.height - height) * 0.5);\n  const left = windowFeatures.left ?? Math.max(0, (window.screen.width - width) * 0.5);\n\n  // Create a reasonable popup\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features\n  return featureObjectToString({\n    ...windowFeatures,\n    // Toolbar buttons (Back, Forward, Reload, Stop buttons).\n    toolbar: windowFeatures.toolbar ?? 'no',\n    menubar: windowFeatures.menubar ?? 'no',\n    // Shows the location bar or the address bar.\n    location: windowFeatures.location ?? 'yes',\n    resizable: windowFeatures.resizable ?? 'yes',\n    // If this feature is on, then the new secondary window has a status bar.\n    status: windowFeatures.status ?? 'no',\n    scrollbars: windowFeatures.scrollbars ?? 'yes',\n    top,\n    left,\n    width,\n    height,\n  });\n}\n\nexport function featureObjectToString(features: Record<string, any>): string {\n  return Object.keys(features).reduce<string>((prev, current) => {\n    let value = features[current];\n    if (typeof value === 'boolean') {\n      value = value ? 'yes' : 'no';\n    }\n    if (current && value) {\n      if (prev) prev += ',';\n      return `${prev}${current}=${value}`;\n    }\n    return prev;\n  }, '');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}